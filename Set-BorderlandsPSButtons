<#
.SYNOPSIS
    Modifies Borderlands 1 and 2 configuration files to set PlayStation button prompts.
.DESCRIPTION
    This script modifies the configuration files of Borderlands 1 and 2 to replace Xbox button prompts with PlayStation button prompts. 
    It creates a backup of the original file before making any changes.
    The buttons prompts shipped with the game are the PS3 variants, so this script will replace the Xbox360 button prompts with PS3 button prompts.
.EXAMPLE
    Set-BorderlandsPSButtons.ps1
    This will prompt the user for the paths to the Borderlands 1 and 2 configuration files and replace the Xbox button prompts with PlayStation button prompts.
#>

# Prompt user for Borderlands 1 game ini file path
$borderlands1DefaultGameIni = Read-Host "Enter Borderlands 1 DefaultGame.ini file path (e.g., E:\SteamLibrary\steamapps\common\BorderlandsGOTYEnhanced\WillowGame\Config\DefaultGame.ini)"
# Prompt user for Borderlands 2 game ini file path
$borderlands2DefaultGameIni = Read-Host "Enter Borderlands 2 DefaultGame.ini file path (e.g., E:\SteamLibrary\steamapps\common\Borderlands 2\WillowGame\Config\DefaultGame.ini)"

# Function to backup a file
function Backup-File {
    param (
        [string]$filePath
    )
    $backupPath = "$filePath.bak"
    if (Test-Path -Path $filePath) {
        try {
            Copy-Item -Path $filePath -Destination $backupPath -Force
            Write-Host "Backed up $filePath to $backupPath" -ForegroundColor Green
        } catch {
            Write-Host "Error backing up $filePath`: $_" -ForegroundColor Red
        }
    } else {
        Write-Host "File not found: $filePath" -ForegroundColor Yellow
    }
}

# Function to modify a Borderlands configuration file
function Set-GameConfig {
    param (
        [string]$filePath,
        [hashtable]$stringTable
    )

    if (Test-Path -Path $filePath) {

        # Backup the file before making changes
        Backup-File -filePath $filePath

        try {
            $content = Get-Content -Path $filePath
            foreach ($key in $stringTable.Keys) {
                $content = $content.Replace($key, $stringTable[$key])
            }
            Set-Content -Path $filePath -Value $content
            Write-Host "Processed: $filePath" -ForegroundColor Green
        } catch {
            Write-Host "Error processing $filePath`: $_" -ForegroundColor Red
            # Optionally, restore the backup if an error occurs
            # Copy-Item -Path "$filePath.bak" -Destination $filePath -Force
        }
    } else {
        Write-Host "File not found: $filePath" -ForegroundColor Yellow
    }
}

# Process Borderlands 1 
Set-GameConfig -filePath $borderlands1DefaultGameIni -stringTable $stringTable

# Process Borderlands 2 
Set-GameConfig -filePath $borderlands2DefaultGameIni -stringTable $stringTable
